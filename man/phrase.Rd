% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phrases.R
\name{phrase}
\alias{phrase}
\alias{as.phrase}
\alias{is.phrase}
\title{Declare a compound character to be a sequence of separate pattern matches}
\usage{
phrase(x, separator = " ")

as.phrase(x)

is.phrase(x)
}
\arguments{
\item{x}{\code{character} object containing the \code{separator} between
the patterns.}

\item{separator}{the character in between the patterns. This defaults to " ".}
}
\value{
\code{phrase} returns a specially classed list whose white-spaced
elements have been parsed into separate \code{character} elements.

\code{is.phrase} returns \code{TRUE} if the object was created by
\code{\link[=phrase]{phrase()}}; \code{FALSE} otherwise.
}
\description{
Declares that a whitespace-separated expression consists of multiple
patterns, separated by whitespace.  This is typically used as a wrapper
around \code{\link[=pattern]{pattern()}} to make it explicit that the pattern elements
are to be used for matches to multi-word sequences, rather than individual,
unordered matches to single words.
}
\examples{
# make phrases from characters
phrase(c("a b", "c d e", "f"))
phrase(c("a_b", "c_d_e", "f"), separator = "_")

# from a dictionary
phrase(dictionary(list(catone = c("a b"), cattwo = "c d e", catthree = "f")))

}
