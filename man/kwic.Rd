% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kwic.R
\name{kwic}
\alias{kwic}
\alias{is.kwic}
\alias{as.data.frame.kwic}
\title{Locate keywords-in-context}
\usage{
kwic(
  x,
  pattern,
  window = 5,
  valuetype = c("glob", "regex", "fixed"),
  separator = " ",
  case_insensitive = TRUE,
  ...
)

is.kwic(x)

\method{as.data.frame}{kwic}(x, ..., window = NULL, separator = NULL)
}
\arguments{
\item{x}{a character, \link{corpus}, or \link{tokens} object}

\item{pattern}{a character vector, list of character vectors, \link{dictionary},
or collocations object.  See \link{pattern} for details.}

\item{window}{the number of context words to be displayed around the keyword}

\item{valuetype}{the type of pattern matching: \code{"glob"} for "glob"-style
wildcard expressions; \code{"regex"} for regular expressions; or \code{"fixed"} for
exact matching. See \link{valuetype} for details.}

\item{separator}{character to separate words in the output}

\item{case_insensitive}{logical; if \code{TRUE}, ignore case when matching a
\code{pattern} or \link{dictionary} values}

\item{...}{additional arguments passed to \link{tokens}, for applicable
object types; not used by \code{as.data.frame.kwic()}}
}
\value{
A \code{kwic} classed data.frame, with the document name
(\code{docname}) and the token index positions (\code{from} and \code{to},
which will be the same for single-word patterns, or a sequence equal in
length to the number of elements for multi-word phrases).

\code{as.data.frame.kwic()} returns a data.frame consisting of \code{docname}, token
index values for the keyword matches \code{from} and \code{to}, character fields
\code{pre}, \code{keyword}, and \code{post} and the original \code{pattern} used for the match.
The window size and separator can be adjusted in \code{as.data.frame()},
regardless of their setting when the kwic was created.
}
\description{
For a text or a collection of texts (in a quanteda corpus object), return a
list of a keyword supplied by the user in its immediate context, identifying
the source text and the word index number within the source text.  (Not the
line number, since the text may or may not be segmented using end-of-line
delimiters.)
}
\note{
\code{pattern} will be a keyword pattern or phrase, possibly multiple
patterns, that may include punctuation.  If a pattern contains whitespace,
it is best to wrap it in \code{\link[=phrase]{phrase()}} to make this explicit. However if
\code{pattern} is a \link[quanteda.textstats:textstat_collocations]{collocations} or
\link{dictionary} object, then the collocations or multi-word dictionary keys
will automatically be considered phrases where each whitespace-separated
element matches a token in sequence.
}
\examples{
corp <- data_corpus_inaugural[1:8]
kwic(corp, pattern = "secure*", valuetype = "glob", window = 3)
kwic(corp, pattern = "secur", valuetype = "regex", window = 3)
kwic(corp, pattern = "security", valuetype = "fixed", window = 3)

toks <- tokens(corp)
kwic(toks, pattern = phrase("secur* against"), window = 2)
kw <- kwic(toks, pattern = phrase("war against"), valuetype = "regex")

kw <- kwic(data_corpus_inaugural, "provident*")
is.kwic(kw)
is.kwic("Not a kwic")
is.kwic(kw[, c("pre", "post")])

corp <- data_corpus_inaugural[1:8]
kw <- kwic(corp, pattern = "secure*", valuetype = "glob", window = 1)
as.data.frame(kw)
as.data.frame(kw, window = 3)
}
